# -*- after-save-hook: org-babel-tangle; -*-
#+TITLE: Spelling
#+PROPERTY: header-args :tangle (concat x/lisp-dir "feature-spelling.el")

#+begin_src emacs-lisp
(defvar-local +spellcheck-immediately t
  "If non-nil, spellcheck the current buffer upon starting `flyspell-mode'.

Since spellchecking can be slow in some buffers, this can be disabled with:

  (setq-hook! 'TeX-mode-hook +spellcheck-immediately nil)")

(use-package flyspell ; built-in
  :defer t
  :init (add-hook 'flyspell-mode-hook #'+spellcheck|immediately)
  :config
  (defun +spellcheck|immediately ()
    "Spellcheck the buffer when `flyspell-mode' is enabled."
    (when (and flyspell-mode +spellcheck-immediately)
      (flyspell-buffer))))

(use-package flyspell-correct
  :commands (flyspell-correct-word-generic
             flyspell-correct-previous-word-generic)
  :defer t
  :ensure nil
  :quelpa (flyspell-correct :fetcher github :repo "d12frosted/flyspell-correct")
  :init
  ;; (add-hook 'flyspell-mode-hook 'flyspell-popup-auto-correct-mode)
  :general
  (map!
    "s" '(hydra-spell/body :which-key "Spell"))
  :config
  ;; (require 'flyspell-correct-ivy)
  (defhydra hydra-spell (:hint t :color red)
    ("q" nil "quit" :color: blue)
    ("t" flyspell-mode "Toggle")
    ("j" flyspell-correct-next "Next")
    ("k" flyspell-correct-previous "Previous")
    ("c" flyspell-correct-wrapper "Correct"))
  ;; (require 'flyspell-correct-popup)
  ;; (setq flyspell-popup-correct-delay 0.8)
  ;; (define-key popup-menu-keymap [escape] #'keyboard-quit))
  )

(use-package flyspell-correct-ivy
  :init
  (setq flyspell-correct-interface #'flyspell-correct-ivy))


;; (use-package flyspell-correct-ivy
;;   :commands (flyspell-correct-ivy)
;;   :init
;;   (setq flyspell-correct-interface #'flyspell-correct-ivy))
(provide 'feature-spelling)
#+end_src

